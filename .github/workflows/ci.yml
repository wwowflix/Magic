name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: windows-latest

    env:
      PYTHONUTF8: "1"
      PYTHONPATH: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path requirements.txt)     { pip install -r requirements.txt }
          if (Test-Path requirements-dev.txt) { pip install -r requirements-dev.txt }
          if (-not (Test-Path requirements-dev.txt)) { pip install pandas numpy matplotlib }

      - name: Pre-commit (optional)
        continue-on-error: true
        shell: pwsh
        run: |
          if (Test-Path .pre-commit-config.yaml) {
            pip install pre-commit
            pre-commit run --all-files 2>&1 | Tee-Object -FilePath precommit.log
          }

      - name: Run tests (pytest)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Continue'
          pip install pytest pytest-cov
          pytest -vv --maxfail=1 --disable-warnings `
            --junitxml=pytest_junit.xml `
            --cov=. --cov-report=xml:coverage.xml `
            2>&1 | Tee-Object -FilePath pytest.log
          if ($LASTEXITCODE -ne 0) { exit 1 }

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ci-failure-logs
          path: |
            pytest.log
            pytest_junit.xml
            coverage.xml
            precommit.log